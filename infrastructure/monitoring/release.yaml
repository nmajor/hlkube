apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 1h
  timeout: 10m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: ">=55.0.0"
      sourceRef:
        kind: HelmRepository
        name: prometheus
        namespace: flux-system
  install:
    createNamespace: false
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: true
        configReloaders: true
        general: true
        k8s: true
        kubeApiserverAvailability: true
        kubePrometheusNodeRecording: true
        kubeScheduler: true
        kubeStateMetrics: true
        kubelet: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true

    alertmanager:
      enabled: true
      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: "null"
          routes:
            - match:
                alertname: Watchdog
              receiver: "null"
        receivers:
          - name: "null"

    grafana:
      enabled: true
      defaultDashboardsEnabled: true
      defaultDashboardsTimezone: browser
      adminPassword: admin
      service:
        type: ClusterIP
      ingress:
        enabled: false
      securityContext:
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
      persistence:
        enabled: true
        type: pvc
        storageClassName: longhorn
        accessModes:
          - ReadWriteOnce
        size: 10Gi
      grafana.ini:
        auth:
          oauth_auto_login: true
          signout_redirect_url: "https://auth.nmajor.net/oauth2/sign_out"
          disable_login_form: true
          disable_signout_menu: true
        auth.proxy:
          enabled: true
          header_name: X-Email
          header_property: email
          headers: Name:X-User
          auto_sign_up: true
          enable_login_token: false
          sync_ttl: 60
        users:
          allow_sign_up: false
          auto_assign_org: true
          auto_assign_org_role: Admin
        security:
          allow_embedding: true
        server:
          root_url: "https://grafana.nmajor.net"
          domain: "grafana.nmajor.net"

    kubeStateMetrics:
      enabled: true

    nodeExporter:
      enabled: true
      serviceMonitor:
        enabled: true
        jobLabel: jobLabel
        selector:
          matchLabels:
            app: prometheus-node-exporter
            release: kube-prometheus-stack
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 100m
          memory: 100Mi
      tolerations:
        - effect: NoSchedule
          operator: Exists
      updateStrategy:
        type: RollingUpdate

    prometheusOperator:
      enabled: true
      admissionWebhooks:
        enabled: true
        failurePolicy: Ignore

    prometheus:
      enabled: true
      prometheusSpec:
        retention: 10d
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        resources:
          requests:
            memory: 1Gi
            cpu: 500m
          limits:
            memory: 2Gi
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 20Gi
